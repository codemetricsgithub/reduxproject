[{"E:\\reduxproject\\src\\index.js":"1","E:\\reduxproject\\src\\reportWebVitals.js":"2","E:\\reduxproject\\src\\App.js":"3","E:\\reduxproject\\src\\User.js":"4","E:\\reduxproject\\src\\serviceWorker.js":"5","E:\\reduxproject\\src\\components\\elements\\Navbar.js":"6","E:\\reduxproject\\src\\components\\contact\\Contacts.js":"7","E:\\reduxproject\\src\\Store.js":"8","E:\\reduxproject\\src\\components\\contact\\Contact.js":"9","E:\\reduxproject\\src\\components\\contact\\AddContact.js":"10","E:\\reduxproject\\src\\actions\\contactAction.js":"11","E:\\reduxproject\\src\\reducers\\index.js":"12","E:\\reduxproject\\src\\reducers\\contactReducer.js":"13","E:\\reduxproject\\src\\constant\\Types.js":"14","E:\\reduxproject\\src\\components\\contact\\EditContact.js":"15"},{"size":221,"mtime":1608566565470,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1194,"mtime":1608741308618,"results":"19","hashOfConfig":"17"},{"size":275,"mtime":1608375117388,"results":"20","hashOfConfig":"17"},{"size":5227,"mtime":1608481527847,"results":"21","hashOfConfig":"17"},{"size":707,"mtime":1608699402413,"results":"22","hashOfConfig":"17"},{"size":2529,"mtime":1608967636979,"results":"23","hashOfConfig":"17"},{"size":262,"mtime":1608737880875,"results":"24","hashOfConfig":"17"},{"size":1439,"mtime":1608967208879,"results":"25","hashOfConfig":"17"},{"size":2586,"mtime":1609004926520,"results":"26","hashOfConfig":"17"},{"size":1075,"mtime":1608832968179,"results":"27","hashOfConfig":"17"},{"size":165,"mtime":1608739482098,"results":"28","hashOfConfig":"17"},{"size":9566,"mtime":1609005350080,"results":"29","hashOfConfig":"17"},{"size":363,"mtime":1608830038959,"results":"30","hashOfConfig":"17"},{"size":3125,"mtime":1609005074286,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"aebv9e",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"E:\\reduxproject\\src\\index.js",[],["67","68"],"E:\\reduxproject\\src\\reportWebVitals.js",[],["69","70"],"E:\\reduxproject\\src\\App.js",[],"E:\\reduxproject\\src\\User.js",[],"E:\\reduxproject\\src\\serviceWorker.js",[],["71","72"],"E:\\reduxproject\\src\\components\\elements\\Navbar.js",[],"E:\\reduxproject\\src\\components\\contact\\Contacts.js",["73"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearAllcontact, deleteAllContact, selectAllContact } from '../../actions/contactAction';\r\nimport Contact from './Contact';\r\n\r\nconst Contacts = () => {\r\n    const dispatch = useDispatch();\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const contacts = useSelector((state) => state.contact.contacts);\r\n    //console.log(contacts);\r\n    const selectedContacts = useSelector((state) => state.contact.selectedContacts);\r\n\r\n    useEffect(() => {\r\n        if (selectAll) {\r\n            dispatch(selectAllContact(contacts.map((contact) => contact.id)));\r\n        } else {\r\n            dispatch(clearAllcontact());\r\n        }\r\n    }, [selectAll]);\r\n\r\n    return (\r\n        <div>\r\n            {selectedContacts.length > 0 ? (\r\n                <button\r\n                    className=\"btn btn-outline-danger mb-2\"\r\n                    onClick={() => dispatch(deleteAllContact())}\r\n                >\r\n                    Delete all\r\n                </button>\r\n            ) : null}\r\n            <table className=\"table shadow\">\r\n                <thead className=\"bg-danger\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input\r\n                                    id=\"selectAll\"\r\n                                    type=\"checkbox\"\r\n                                    className=\"custom-control-input\"\r\n                                    value={selectAll}\r\n                                    onClick={() => setSelectAll(!selectAll)}\r\n                                />\r\n\r\n                                <label htmlFor=\"selectAll\" className=\"custom-control-label\">\r\n                                    {' '}\r\n                                    Select All\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th>Name</th>\r\n                        <th>Phone</th>\r\n                        <th>E-mail</th>\r\n                        <th>Operations </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {contacts.map((contact) => (\r\n                        <Contact contact={contact} key={contact.id} selectAll={selectAll} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;\r\n","E:\\reduxproject\\src\\Store.js",[],"E:\\reduxproject\\src\\components\\contact\\Contact.js",[],"E:\\reduxproject\\src\\components\\contact\\AddContact.js",[],"E:\\reduxproject\\src\\actions\\contactAction.js",[],"E:\\reduxproject\\src\\reducers\\index.js",[],"E:\\reduxproject\\src\\reducers\\contactReducer.js",["74","75","76"],"E:\\reduxproject\\src\\constant\\Types.js",[],"E:\\reduxproject\\src\\components\\contact\\EditContact.js",["77"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { getContact, updateContact } from '../../actions/contactAction';\r\nimport { UPDATE_CONTACT } from '../../constant/Types';\r\n\r\nconst EditContact = () => {\r\n    let { id } = useParams(); // take given data as editable\r\n    // alert(id);\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const contactedit = useSelector((state) => state.contact.contactedit);\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (contactedit != null) {\r\n            setName(contactedit.name);\r\n            setPhone(contactedit.phone);\r\n            setEmail(contactedit.email);\r\n        }\r\n        dispatch(getContact(id));\r\n    }, [contactedit]);\r\n\r\n    const onUpdateContactedit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const update_contact = Object.assign(contactedit, {\r\n            name: name,\r\n            phone: phone,\r\n            email: email,\r\n        });\r\n        dispatch(updateContact(UPDATE_CONTACT));\r\n        history.push('/');\r\n        //Object.assign(contactedit,  holds previous data while create new data\r\n        console.log(update_contact);\r\n    };\r\n    return (\r\n        <div className=\"card border-0 shadow\">\r\n            <div className=\"card-header \">Add a contact </div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={(event) => onUpdateContactedit(event)}>\r\n                    <div className=\"form-group mb-2 \">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter your Name\"\r\n                            value={name}\r\n                            onChange={(event) => setName(event.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mb-2\">\r\n                        <input\r\n                            type=\"text\"\r\n                            size=\"10\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter your Phone Number\"\r\n                            value={phone}\r\n                            onChange={(event) => setPhone(event.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group mb-2\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter your Email\"\r\n                            value={email}\r\n                            onChange={(event) => setEmail(event.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn  btn-outline-info\">update contact</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditContact;\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"80","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":19,"column":8,"nodeType":"88","endLine":19,"endColumn":19,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":256,"column":77,"nodeType":"92","messageId":"93","endLine":256,"endColumn":79},{"ruleId":"90","severity":1,"message":"91","line":270,"column":32,"nodeType":"92","messageId":"93","endLine":270,"endColumn":34},{"ruleId":"90","severity":1,"message":"94","line":277,"column":73,"nodeType":"92","messageId":"93","endLine":277,"endColumn":75},{"ruleId":"86","severity":1,"message":"95","line":24,"column":8,"nodeType":"88","endLine":24,"endColumn":21,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],["97"],["98"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'contacts' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["99"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [contacts, dispatch, selectAll]",{"range":"105","text":"106"},"Update the dependencies array to be: [contactedit, dispatch, id]",{"range":"107","text":"108"},[760,771],"[contacts, dispatch, selectAll]",[928,941],"[contactedit, dispatch, id]"]